# -*- coding: utf-8 -*-
"""doppler_shift

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1AK_38_6AImq6rhc7UEeOEW9gVPiw31B_
"""

import math
from astropy import units as u

__all__ = ['doppler_shift']
def doppler_shift(rest, obs, velocity):
  """
  Function for calculating any one of the inputs based on the values for the other two. Input 'False' for
  the value you intend to find. Equation is more exact than dopplet_shift_approx_rest.

  Parameters:

  rest: Quantity
  The wavelength at rest, preferably in Angstroms. Must have the same units as obs.

  obs: Quantity
  The observed wavelength in your data, preferably in Angstroms. Must have the same units as rest.

  velocity: Quantity
  The heliocentric velocity of the object you are measuring, in km/sec.

  Returns:

  observed (if rest, velocity are False): Quantity
  rest_wave (if obs, velocity are False): Quantity
  vel (if rest, obs are False): Quantity

  """
  c = 2.99792458 * math.pow(10, 10) * u.cm/u.sec

  if obs == False:
    observed = rest * math.sqrt((1 + velocity / c) / (1 - velocity / c))
    return observed

  elif rest == False:
    rest_wave = obs / math.sqrt((1 + velocity / c) / (1 - velocity / c))
    return rest_wave

  elif velocity == False:
    z = (obs - rest) / rest
    vel = (c * (math.sqrt(z) + 2 * z) / (math.sqrt(z) + 2 * z + 2))
    return vel